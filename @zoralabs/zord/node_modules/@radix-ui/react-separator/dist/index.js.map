{"mappings":";;;;;;;;;;;;;A;;;ACKA;;oGAEA,CAEA,MAAMI,0BAAI,GAAG,WAAb,AAAA;AACA,MAAMC,yCAAmB,GAAG,YAA5B,AAAA;AACA,MAAMC,kCAAY,GAAG;IAAC,YAAD;IAAe,UAAf;CAArB,AAAA;AAiBA,MAAMN,yCAAS,GAAA,aAAGE,CAAAA,uBAAA,CAAmD,CAACM,KAAD,EAAQC,YAAR,GAAyB;IAC5F,MAAM,E,YAAEC,UAAF,CAAA,EAAcC,WAAW,EAAEC,eAAe,GAAGP,yCAA7C,CAAA,EAAkE,GAAGQ,QAAH,EAAlE,GAAkFL,KAAxF,AAAM;IACN,MAAMG,WAAW,GAAGG,wCAAkB,CAACF,eAAD,CAAlB,GAAsCA,eAAtC,GAAwDP,yCAA5E,AAF4F,EAG5F,8FADA;IAEA,MAAMU,eAAe,GAAGJ,WAAW,KAAK,UAAhB,GAA6BA,WAA7B,GAA2CK,SAAnE,AAAA;IACA,MAAMC,aAAa,GAAGP,UAAU,GAC5B;QAAEQ,IAAI,EAAE,MAANA;KAD0B,GAE5B;QAAE,kBAAA,EAAoBH,eAAtB;QAAuCG,IAAI,EAAE,WAANA;KAF3C,AAEI;IAEJ,OAAA,aACE,CAAA,0BAAA,CAAC,sCAAD,CAAW,GAAX,EADF,2DAAA,CAAA;QAEI,kBAAA,EAAkBP,WAAlB;KADF,EAEMM,aAFN,EAGMJ,QAHN,EAAA;QAIE,GAAG,EAAEJ,YAAL;KAJF,CAAA,CADF,CACE;CAVc,CAAlB,AAiBC;AAED,aAAA,CAAA,MAAA,CAAA,MAAA,CAAA,yCAAA,EAAA;IAAA,WAAA,EAAA,0BAAA;CAAA,CAAA,CAAA;AAEAT,yCAAS,CAACmB,SAAV,GAAsB;IACpBR,WAAW,EAACH,KAAD,EAAQY,QAAR,EAAkBC,aAAlB,EAAiC;QAC1C,MAAMC,SAAS,GAAGd,KAAK,CAACY,QAAD,CAAvB,AAAA;QACA,MAAMG,MAAM,GAAGC,MAAM,CAACF,SAAD,CAArB,AAAA;QACA,IAAIA,SAAS,IAAI,CAACR,wCAAkB,CAACQ,SAAD,CAApC,EACE,OAAO,IAAIG,KAAJ,CAAUC,gDAA0B,CAACH,MAAD,EAASF,aAAT,CAApC,CAAP,CAAA;QAEF,OAAO,IAAP,CAAA;KACD;CARH,CAAsB;AAWtB,oGAAA,CAEA,+DAAA;AACA,SAASK,gDAAT,CAAoCC,KAApC,EAAmDN,aAAnD,EAA0E;IACxE,OAAQ,CAAA,wCAAA,EAA0CM,KAAM,CAAA,iBAAA,EAAmBN,aAAc,CAAzF;;;;gBAIF,EAAkBhB,yCAAoB,CAAA,GAAA,CAJpC,CAIF;CACC;AAED,SAASS,wCAAT,CAA4BH,WAA5B,EAA0E;IACxE,OAAOL,kCAAY,CAACsB,QAAb,CAAsBjB,WAAtB,CAAP,CAAA;CACD;AAED,MAAMV,yCAAI,GAAGD,yCAAb,AAAA;;AD3EA","sources":["packages/react/separator/src/index.ts","packages/react/separator/src/Separator.tsx"],"sourcesContent":["export {\n  Separator,\n  //\n  Root,\n} from './Separator';\nexport type { SeparatorProps } from './Separator';\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\n\nimport type * as Radix from '@radix-ui/react-primitive';\n\n/* -------------------------------------------------------------------------------------------------\n *  Separator\n * -----------------------------------------------------------------------------------------------*/\n\nconst NAME = 'Separator';\nconst DEFAULT_ORIENTATION = 'horizontal';\nconst ORIENTATIONS = ['horizontal', 'vertical'] as const;\n\ntype Orientation = typeof ORIENTATIONS[number];\ntype SeparatorElement = React.ElementRef<typeof Primitive.div>;\ntype PrimitiveDivProps = Radix.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface SeparatorProps extends PrimitiveDivProps {\n  /**\n   * Either `vertical` or `horizontal`. Defaults to `horizontal`.\n   */\n  orientation?: Orientation;\n  /**\n   * Whether or not the component is purely decorative. When true, accessibility-related attributes\n   * are updated so that that the rendered element is removed from the accessibility tree.\n   */\n  decorative?: boolean;\n}\n\nconst Separator = React.forwardRef<SeparatorElement, SeparatorProps>((props, forwardedRef) => {\n  const { decorative, orientation: orientationProp = DEFAULT_ORIENTATION, ...domProps } = props;\n  const orientation = isValidOrientation(orientationProp) ? orientationProp : DEFAULT_ORIENTATION;\n  // `aria-orientation` defaults to `horizontal` so we only need it if `orientation` is vertical\n  const ariaOrientation = orientation === 'vertical' ? orientation : undefined;\n  const semanticProps = decorative\n    ? { role: 'none' }\n    : { 'aria-orientation': ariaOrientation, role: 'separator' };\n\n  return (\n    <Primitive.div\n      data-orientation={orientation}\n      {...semanticProps}\n      {...domProps}\n      ref={forwardedRef}\n    />\n  );\n});\n\nSeparator.displayName = NAME;\n\nSeparator.propTypes = {\n  orientation(props, propName, componentName) {\n    const propValue = props[propName];\n    const strVal = String(propValue);\n    if (propValue && !isValidOrientation(propValue)) {\n      return new Error(getInvalidOrientationError(strVal, componentName));\n    }\n    return null;\n  },\n};\n\n/* -----------------------------------------------------------------------------------------------*/\n\n// Split this out for clearer readability of the error message.\nfunction getInvalidOrientationError(value: string, componentName: string) {\n  return `Invalid prop \\`orientation\\` of value \\`${value}\\` supplied to \\`${componentName}\\`, expected one of:\n  - horizontal\n  - vertical\n\nDefaulting to \\`${DEFAULT_ORIENTATION}\\`.`;\n}\n\nfunction isValidOrientation(orientation: any): orientation is Orientation {\n  return ORIENTATIONS.includes(orientation);\n}\n\nconst Root = Separator;\n\nexport {\n  Separator,\n  //\n  Root,\n};\nexport type { SeparatorProps };\n"],"names":["Separator","Root","React","Primitive","NAME","DEFAULT_ORIENTATION","ORIENTATIONS","forwardRef","props","forwardedRef","decorative","orientation","orientationProp","domProps","isValidOrientation","ariaOrientation","undefined","semanticProps","role","propTypes","propName","componentName","propValue","strVal","String","Error","getInvalidOrientationError","value","includes"],"version":3,"file":"index.js.map"}